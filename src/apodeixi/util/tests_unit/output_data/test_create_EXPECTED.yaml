util:
  __init__.py: ''
  a6i_error.py: ''
  apodeixi_config.py: ''
  dataframe_utils.py: ''
  dictionary_utils.py: ''
  excel_writer_utils.py: ''
  formatting_utils.py: ''
  list_utils.py: ''
  path_utils.py: ''
  tests_unit:
    __init__.py: ''
    input_data:
      .ipynb_checkpoints:
        test_notebook_run_INPUT-checkpoint.ipynb: ''
      test_compare_dataframes_df1_INPUT.csv: ''
      test_compare_dataframes_df2_INPUT.csv: ''
      test_notebook_run_INPUT.ipynb: ''
      test_path_utils_INPUT.txt: ''
    output_data:
      a6i_error_EXPECTED.txt: ''
      a6i_error_OUTPUT.txt: ''
      functional_trace_EXPECTED.txt: ''
      functional_trace_OUTPUT.txt: ''
      notebooks:
        test_notebook_run_executed_notebook.ipynb: ''
      test_a6i_config_EXPECTED.txt: ''
      test_a6i_config_OUTPUT.txt: ''
      test_compare_dataframes_comparison_EXPECTED.txt: ''
      test_compare_dataframes_comparison_OUTPUT.txt: ''
      test_create_EXPECTED.yaml: ''
      test_create_OUTPUT.yaml: ''
      test_fy_quarter_EXPECTED.txt: ''
      test_fy_quarter_OUTPUT.txt: ''
      test_get_products_EXPECTED.txt: ''
      test_get_products_OUTPUT.txt: ''
      test_merge_lists_EXPECTED.txt: ''
      test_merge_lists_OUTPUT.txt: ''
      test_notebook_run_EXPECTED.yaml: ''
      test_notebook_run_OUTPUT.yaml: ''
      test_path_utils_EXPECTED.txt: ''
      test_path_utils_OUTPUT.txt: ''
    test_a6i_error.py: ''
    test_apodeixi_config.py: ''
    test_dataframe_utils.py: ''
    test_folder_hierarchy.py: ''
    test_formatting_utils.py: ''
    test_list_utils.py: ''
    test_path_utils.py: ''
    test_time_buckets.py: ''
  time_buckets.py: ''
